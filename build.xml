<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE ant-project>
<project name="mdm" basedir="." default="dist">
	<description>
  Modern Dependancy Management automates the organization of a project and the 
  libraries it depends on with clever git submodules, giving you a project
  structure that is:
   - strongly versioned and guaranteed repeatable builds!
   - checking out a project gives you exactly everything you need to do a build!
   - your repository doesn't bloat over time and doing a fresh clone ships you 
     the bare minimum number of bytes that you need!
	</description>
	<property name="app" value="mdm"/>

	<property name="exus.build.java.version.source" value="1.6"/>
	<property name="exus.build.java.version.target" value="1.6"/>

	<import file="lib/exus-build/build-exultant.xml"/>


	<target name="init" depends="exusInit">
	</target>


	<path id="mdm.path.deps.main" cache="true">
		<pathelement location="${lib}/jgit/jgit.jar"/>
		<pathelement location="${lib}/ahslib/ahslib-core.jar"/>
		<pathelement location="${lib}/argparse4j/argparse4j.jar"/>
		<pathelement location="${lib}/jsch/jsch.jar"/>
	</path>
	<path id="mdm.path.main">
		<path refid="mdm.path.deps.main" />
		<pathelement location="${build}/main" />
	</path>
	<path id="mdm.path.deps.test">
		<path refid="mdm.path.main" />
		<pathelement location="${lib}/junit/junit.jar"/>
	</path>
	<path id="mdm.path.test">
		<path refid="mdm.path.deps.test" />
		<pathelement location="${build}/test" />
	</path>


	<target name="compile" depends="init" description="compile the source">
		<exusJavac
			classes="us/exultant/${app}/Mdm.java"
			depends="${toString:mdm.path.deps.main}"
		/>
	</target>


	<target name="dist"
		depends="compile"
		description="pack distributable artifacts">
		<exusPack destfile="${dist}/${app}">
			<manifest>
				<attribute name="Main-Class" value="us.exultant.${app}.Mdm"/>
			</manifest>
			<fileset file="${build}/main/**"/>
			<zipfileset src="${lib}/jgit/jgit.jar" includes="**/*.class org/**/*.properties"/>
			<zipfileset src="${lib}/ahslib/ahslib-core.jar" includes="**/*.class"/>
			<zipfileset src="${lib}/argparse4j/argparse4j.jar" includes="**/*.class"/>
			<zipfileset src="${lib}/jsch/jsch.jar" includes="**/*.class"/>
		</exusPack>
		<chmod file="${dist}/${app}" perm="755"/>
	</target>


	<target name="clean" description="clean up">
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>


	<target name="run-mdma" depends="dist">
		<!-- actually, just running this in a shell can be nicer since then you don't have ant dicking up your output buffering in strange ways:
			ant clean dist && export MDM=$(pwd)/dist/mdm MDMA=$(pwd)/mdma.sh && ( cd /tmp/ ;  rm -rf mdm-demo/ ; $MDMA -t )
		-->
		<delete dir="mdm-demo" />
		<exec executable="mdma.sh" failonerror="true">
			<env key="MDM" value="${basedir}/${dist}/${app}" />
			<arg value="-t" />
		</exec>
		<delete dir="mdm-demo" />
	</target>


	<target name="compile-test" depends="compile">
		<exusJavac
			tree="test"
			depends="${toString:mdm.path.deps.test}"
		/>
	</target>


	<target name="run-test" depends="compile, compile-test">
		<property name="mdm.test.dir" value="${java.io.tmpdir}/mdm-test"/>
		<mkdir dir="${mdm.test.dir}"/>
		<junit printsummary="off" haltonfailure="yes" dir="${mdm.test.dir}" newenvironment="true">
			<formatter type="plain" usefile="false" />

			<classpath refid="mdm.path.test"/>

			<batchtest fork="yes">
				<fileset dir="${build}/test">
					<include name="us/exultant/${app}/commands/*Test*.class"/>
					<include name="us/exultant/${app}/jgit/*Test*.class"/>
					<include name="us/exultant/${app}/util/*Test*.class"/>
				</fileset>
			</batchtest>
		</junit>
	</target>


	<target name="release" depends="clean, dist">
		<exec executable="mdm">
			<arg value="release" />
			<arg value="--version=${version}" />
			<arg value="--files=${dist}" />
		</exec>
	</target>
</project>
